syntax = "proto3";

import "savourrpc/common.proto";
option go_package = "git.savour.io/savour/savourrpc/go-savourrpc/wallet";
option java_package = "com.savourrpc.wallet";
package savourrpc.wallet;


message SupportCoinsRequest{
  string consumer_token = 1;
  string chain = 2;
  string network = 3;
}

message SupportCoinsResponse {
  ReturnCode code=1;
  string msg=2;
  bool support = 3;
}

message NonceRequest {
   string consumer_token = 1;
   string chain = 2;
   string coin = 3;
   string address = 4;
   string network = 5;
}

message NonceResponse {
  ReturnCode code=1;
  string msg=2;
  string nonce = 3;
}

message GasPriceRequest {
   string consumer_token = 1;
   string chain = 2;
   string coin = 3;
   string network = 4;
}

message GasPriceResponse {
  ReturnCode code=1;
  string msg=2;
  string gas = 3;
}

message SendTxRequest{
  string consumer_token = 1;
  string chain = 2;
  string coin = 3;
  string network = 4;
  string raw_tx = 5;
}

message SendTxResponse {
  ReturnCode code=1;
  string msg=2;
  string tx_hash = 3;
}

message BalanceRequest{
  string consumer_token = 1;
  string chain = 2;
  string coin = 3;
  string network = 4;
  string address = 5;
  string contract_address = 6;
}

message BalanceResponse {
  ReturnCode code=1;
  string msg=2;
  string balance = 3;
}

message Address {
    string address = 1;
}

message Value {
    string value = 1;
}

message TxMessage {
   string hash = 1;
   uint32 index = 2;
   repeated Address from = 3;
   repeated Address to = 4;
   repeated Value value = 7;
   string fee = 5;
   bool status = 6;
   int32 type = 8;
   string height = 9;
   string contract_address = 10;
}

message TxAddressRequest{
  string consumer_token = 1;
  string chain = 2;
  string coin = 3;
  string network = 4;
  string address = 5;
  string contract_address = 6;
  uint32 page = 7;
  uint32 pagesize = 8;
}

message TxAddressResponse {
  ReturnCode code=1;
  string msg=2;
  repeated TxMessage tx = 3;
}

message TxHashRequest{
  string consumer_token = 1;
  string chain = 2;
  string coin = 3;
  string network = 4;
  string hash = 5;
}

message TxHashResponse {
  ReturnCode code=1;
  string msg=2;
  TxMessage tx = 3;
}

message AccountRequest{
  string consumer_token = 1;
  string chain = 2;
  string coin = 3;
  string network = 4;
  string address = 5;
}

message AccountResponse {
  ReturnCode code=1;
  string msg=2;
  string account_number = 3;
  string sequence = 4;
  string network = 5;
}

message Vin{
    string hash=1;
    uint32 index=2;
    int64  amount=3;
    string address=4;
}

message Vout{
    string address=1;
    int64 amount=2;
    uint32 index=3;
}

message UtxoRequest{
  string consumer_token = 1;
  string chain = 2;
  string coin = 3;
  string network = 4;
  string address = 5;
}

message UtxoResponse {
  ReturnCode code=1;
  string msg=2;
  string chain=3;
  repeated Vin vins=4;
  repeated Vout vouts=5;
  string fee=6;
}

message MinRentRequest{
  string consumer_token = 1;
  string chain = 2;
  string coin = 3;
  string network = 4;
  string address = 5;
}

message MinRentResponse {
  ReturnCode code=1;
  string msg=2;
  string value = 3;
}

service WalletService {
  rpc getSupportCoins(SupportCoinsRequest) returns (SupportCoinsResponse) {}
  rpc getNonce(NonceRequest) returns (NonceResponse) {}
  rpc getGasPrice(GasPriceRequest) returns (GasPriceResponse) {}
  rpc SendTx(SendTxRequest) returns (SendTxResponse) {}
  rpc getBalance(BalanceRequest) returns (BalanceResponse) {}
  rpc getTxByAddress(TxAddressRequest) returns (TxAddressResponse) {}
  rpc getTxByHash(TxHashRequest) returns (TxHashResponse) {}
  rpc getAccount(AccountRequest) returns (AccountResponse) {}
  rpc getUtxo(UtxoRequest) returns (UtxoResponse) {}
  rpc getMinRent(MinRentRequest) returns (MinRentResponse) {}
}

