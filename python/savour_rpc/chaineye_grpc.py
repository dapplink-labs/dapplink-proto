# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: savour_rpc/chaineye.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import savour_rpc.common_pb2
import savour_rpc.chaineye_pb2


class ChaineyeServiceBase(abc.ABC):

    @abc.abstractmethod
    async def getArticleCat(self, stream: 'grpclib.server.Stream[savour_rpc.chaineye_pb2.ArticleCatReq, savour_rpc.chaineye_pb2.ArticleCatRep]') -> None:
        pass

    @abc.abstractmethod
    async def getArticleList(self, stream: 'grpclib.server.Stream[savour_rpc.chaineye_pb2.ArticleListReq, savour_rpc.chaineye_pb2.ArticleListRep]') -> None:
        pass

    @abc.abstractmethod
    async def getArticleDetail(self, stream: 'grpclib.server.Stream[savour_rpc.chaineye_pb2.ArticleDetailReq, savour_rpc.chaineye_pb2.ArticleDetailRep]') -> None:
        pass

    @abc.abstractmethod
    async def getCommentList(self, stream: 'grpclib.server.Stream[savour_rpc.chaineye_pb2.CommentListReq, savour_rpc.chaineye_pb2.CommentListRep]') -> None:
        pass

    @abc.abstractmethod
    async def getLikeAddress(self, stream: 'grpclib.server.Stream[savour_rpc.chaineye_pb2.AddressReq, savour_rpc.chaineye_pb2.AddressRep]') -> None:
        pass

    @abc.abstractmethod
    async def likeArticle(self, stream: 'grpclib.server.Stream[savour_rpc.chaineye_pb2.LikeReq, savour_rpc.chaineye_pb2.LikeRep]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/savour_rpc.chaineye.ChaineyeService/getArticleCat': grpclib.const.Handler(
                self.getArticleCat,
                grpclib.const.Cardinality.UNARY_UNARY,
                savour_rpc.chaineye_pb2.ArticleCatReq,
                savour_rpc.chaineye_pb2.ArticleCatRep,
            ),
            '/savour_rpc.chaineye.ChaineyeService/getArticleList': grpclib.const.Handler(
                self.getArticleList,
                grpclib.const.Cardinality.UNARY_UNARY,
                savour_rpc.chaineye_pb2.ArticleListReq,
                savour_rpc.chaineye_pb2.ArticleListRep,
            ),
            '/savour_rpc.chaineye.ChaineyeService/getArticleDetail': grpclib.const.Handler(
                self.getArticleDetail,
                grpclib.const.Cardinality.UNARY_UNARY,
                savour_rpc.chaineye_pb2.ArticleDetailReq,
                savour_rpc.chaineye_pb2.ArticleDetailRep,
            ),
            '/savour_rpc.chaineye.ChaineyeService/getCommentList': grpclib.const.Handler(
                self.getCommentList,
                grpclib.const.Cardinality.UNARY_UNARY,
                savour_rpc.chaineye_pb2.CommentListReq,
                savour_rpc.chaineye_pb2.CommentListRep,
            ),
            '/savour_rpc.chaineye.ChaineyeService/getLikeAddress': grpclib.const.Handler(
                self.getLikeAddress,
                grpclib.const.Cardinality.UNARY_UNARY,
                savour_rpc.chaineye_pb2.AddressReq,
                savour_rpc.chaineye_pb2.AddressRep,
            ),
            '/savour_rpc.chaineye.ChaineyeService/likeArticle': grpclib.const.Handler(
                self.likeArticle,
                grpclib.const.Cardinality.UNARY_UNARY,
                savour_rpc.chaineye_pb2.LikeReq,
                savour_rpc.chaineye_pb2.LikeRep,
            ),
        }


class ChaineyeServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.getArticleCat = grpclib.client.UnaryUnaryMethod(
            channel,
            '/savour_rpc.chaineye.ChaineyeService/getArticleCat',
            savour_rpc.chaineye_pb2.ArticleCatReq,
            savour_rpc.chaineye_pb2.ArticleCatRep,
        )
        self.getArticleList = grpclib.client.UnaryUnaryMethod(
            channel,
            '/savour_rpc.chaineye.ChaineyeService/getArticleList',
            savour_rpc.chaineye_pb2.ArticleListReq,
            savour_rpc.chaineye_pb2.ArticleListRep,
        )
        self.getArticleDetail = grpclib.client.UnaryUnaryMethod(
            channel,
            '/savour_rpc.chaineye.ChaineyeService/getArticleDetail',
            savour_rpc.chaineye_pb2.ArticleDetailReq,
            savour_rpc.chaineye_pb2.ArticleDetailRep,
        )
        self.getCommentList = grpclib.client.UnaryUnaryMethod(
            channel,
            '/savour_rpc.chaineye.ChaineyeService/getCommentList',
            savour_rpc.chaineye_pb2.CommentListReq,
            savour_rpc.chaineye_pb2.CommentListRep,
        )
        self.getLikeAddress = grpclib.client.UnaryUnaryMethod(
            channel,
            '/savour_rpc.chaineye.ChaineyeService/getLikeAddress',
            savour_rpc.chaineye_pb2.AddressReq,
            savour_rpc.chaineye_pb2.AddressRep,
        )
        self.likeArticle = grpclib.client.UnaryUnaryMethod(
            channel,
            '/savour_rpc.chaineye.ChaineyeService/likeArticle',
            savour_rpc.chaineye_pb2.LikeReq,
            savour_rpc.chaineye_pb2.LikeRep,
        )
