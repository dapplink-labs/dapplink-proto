# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from savour_rpc import wallet_pb2 as savour__rpc_dot_wallet__pb2


class WalletServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getSupportCoins = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getSupportCoins',
                request_serializer=savour__rpc_dot_wallet__pb2.SupportCoinsRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.SupportCoinsResponse.FromString,
                )
        self.convertAddress = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/convertAddress',
                request_serializer=savour__rpc_dot_wallet__pb2.ConvertAddressRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.ConvertAddressResponse.FromString,
                )
        self.validAddress = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/validAddress',
                request_serializer=savour__rpc_dot_wallet__pb2.ValidAddressRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.ValidAddressResponse.FromString,
                )
        self.getBlock = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getBlock',
                request_serializer=savour__rpc_dot_wallet__pb2.BlockRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.BlockResponse.FromString,
                )
        self.getNonce = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getNonce',
                request_serializer=savour__rpc_dot_wallet__pb2.NonceRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.NonceResponse.FromString,
                )
        self.getGasPrice = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getGasPrice',
                request_serializer=savour__rpc_dot_wallet__pb2.GasPriceRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.GasPriceResponse.FromString,
                )
        self.getBalance = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getBalance',
                request_serializer=savour__rpc_dot_wallet__pb2.BalanceRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.BalanceResponse.FromString,
                )
        self.getAccount = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getAccount',
                request_serializer=savour__rpc_dot_wallet__pb2.AccountRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.AccountResponse.FromString,
                )
        self.getMinRent = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getMinRent',
                request_serializer=savour__rpc_dot_wallet__pb2.MinRentRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.MinRentResponse.FromString,
                )
        self.SendTx = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/SendTx',
                request_serializer=savour__rpc_dot_wallet__pb2.SendTxRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.SendTxResponse.FromString,
                )
        self.getTxByAddress = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getTxByAddress',
                request_serializer=savour__rpc_dot_wallet__pb2.TxAddressRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.TxAddressResponse.FromString,
                )
        self.getTxByHash = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getTxByHash',
                request_serializer=savour__rpc_dot_wallet__pb2.TxHashRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.TxHashResponse.FromString,
                )
        self.getUtxo = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getUtxo',
                request_serializer=savour__rpc_dot_wallet__pb2.UtxoRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.UtxoResponse.FromString,
                )
        self.getUnspentOutputs = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getUnspentOutputs',
                request_serializer=savour__rpc_dot_wallet__pb2.UnspentOutputsRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.UnspentOutputsResponse.FromString,
                )
        self.getUtxoInsFromData = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getUtxoInsFromData',
                request_serializer=savour__rpc_dot_wallet__pb2.UtxoInsFromDataRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.UtxoInsResponse.FromString,
                )
        self.getAccountTxFromData = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getAccountTxFromData',
                request_serializer=savour__rpc_dot_wallet__pb2.TxFromDataRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.AccountTxResponse.FromString,
                )
        self.getUtxoTxFromData = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getUtxoTxFromData',
                request_serializer=savour__rpc_dot_wallet__pb2.TxFromDataRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.UtxoTxResponse.FromString,
                )
        self.getAccountTxFromSignedData = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/getAccountTxFromSignedData',
                request_serializer=savour__rpc_dot_wallet__pb2.TxFromSignedDataRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.AccountTxResponse.FromString,
                )
        self.GetUtxoTxFromSignedData = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/GetUtxoTxFromSignedData',
                request_serializer=savour__rpc_dot_wallet__pb2.TxFromSignedDataRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.UtxoTxResponse.FromString,
                )
        self.createAccountSignedTx = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/createAccountSignedTx',
                request_serializer=savour__rpc_dot_wallet__pb2.CreateAccountSignedTxRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.CreateSignedTxResponse.FromString,
                )
        self.createAccountTx = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/createAccountTx',
                request_serializer=savour__rpc_dot_wallet__pb2.CreateAccountTxRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.CreateAccountTxResponse.FromString,
                )
        self.createUtxoSignedTx = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/createUtxoSignedTx',
                request_serializer=savour__rpc_dot_wallet__pb2.CreateUtxoSignedTxRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.CreateSignedTxResponse.FromString,
                )
        self.createUtxoTx = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/createUtxoTx',
                request_serializer=savour__rpc_dot_wallet__pb2.CreateUtxoTxRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.CreateUtxoTxResponse.FromString,
                )
        self.verifyAccountSignedTx = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/verifyAccountSignedTx',
                request_serializer=savour__rpc_dot_wallet__pb2.VerifySignedTxRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.VerifySignedTxResponse.FromString,
                )
        self.verifyUtxoSignedTx = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/verifyUtxoSignedTx',
                request_serializer=savour__rpc_dot_wallet__pb2.VerifySignedTxRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.VerifySignedTxResponse.FromString,
                )
        self.ABIBinToJSON = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/ABIBinToJSON',
                request_serializer=savour__rpc_dot_wallet__pb2.ABIBinToJSONRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.ABIBinToJSONResponse.FromString,
                )
        self.ABIJSONToBin = channel.unary_unary(
                '/savour_rpc.wallet.WalletService/ABIJSONToBin',
                request_serializer=savour__rpc_dot_wallet__pb2.ABIJSONToBinRequest.SerializeToString,
                response_deserializer=savour__rpc_dot_wallet__pb2.ABIJSONToBinResponse.FromString,
                )


class WalletServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getSupportCoins(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def convertAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def validAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getNonce(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getGasPrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getMinRent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendTx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getTxByAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getTxByHash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getUtxo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getUnspentOutputs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getUtxoInsFromData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAccountTxFromData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getUtxoTxFromData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAccountTxFromSignedData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUtxoTxFromSignedData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createAccountSignedTx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createAccountTx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createUtxoSignedTx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createUtxoTx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def verifyAccountSignedTx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def verifyUtxoSignedTx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ABIBinToJSON(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ABIJSONToBin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WalletServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getSupportCoins': grpc.unary_unary_rpc_method_handler(
                    servicer.getSupportCoins,
                    request_deserializer=savour__rpc_dot_wallet__pb2.SupportCoinsRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.SupportCoinsResponse.SerializeToString,
            ),
            'convertAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.convertAddress,
                    request_deserializer=savour__rpc_dot_wallet__pb2.ConvertAddressRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.ConvertAddressResponse.SerializeToString,
            ),
            'validAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.validAddress,
                    request_deserializer=savour__rpc_dot_wallet__pb2.ValidAddressRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.ValidAddressResponse.SerializeToString,
            ),
            'getBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.getBlock,
                    request_deserializer=savour__rpc_dot_wallet__pb2.BlockRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.BlockResponse.SerializeToString,
            ),
            'getNonce': grpc.unary_unary_rpc_method_handler(
                    servicer.getNonce,
                    request_deserializer=savour__rpc_dot_wallet__pb2.NonceRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.NonceResponse.SerializeToString,
            ),
            'getGasPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.getGasPrice,
                    request_deserializer=savour__rpc_dot_wallet__pb2.GasPriceRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.GasPriceResponse.SerializeToString,
            ),
            'getBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.getBalance,
                    request_deserializer=savour__rpc_dot_wallet__pb2.BalanceRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.BalanceResponse.SerializeToString,
            ),
            'getAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.getAccount,
                    request_deserializer=savour__rpc_dot_wallet__pb2.AccountRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.AccountResponse.SerializeToString,
            ),
            'getMinRent': grpc.unary_unary_rpc_method_handler(
                    servicer.getMinRent,
                    request_deserializer=savour__rpc_dot_wallet__pb2.MinRentRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.MinRentResponse.SerializeToString,
            ),
            'SendTx': grpc.unary_unary_rpc_method_handler(
                    servicer.SendTx,
                    request_deserializer=savour__rpc_dot_wallet__pb2.SendTxRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.SendTxResponse.SerializeToString,
            ),
            'getTxByAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.getTxByAddress,
                    request_deserializer=savour__rpc_dot_wallet__pb2.TxAddressRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.TxAddressResponse.SerializeToString,
            ),
            'getTxByHash': grpc.unary_unary_rpc_method_handler(
                    servicer.getTxByHash,
                    request_deserializer=savour__rpc_dot_wallet__pb2.TxHashRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.TxHashResponse.SerializeToString,
            ),
            'getUtxo': grpc.unary_unary_rpc_method_handler(
                    servicer.getUtxo,
                    request_deserializer=savour__rpc_dot_wallet__pb2.UtxoRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.UtxoResponse.SerializeToString,
            ),
            'getUnspentOutputs': grpc.unary_unary_rpc_method_handler(
                    servicer.getUnspentOutputs,
                    request_deserializer=savour__rpc_dot_wallet__pb2.UnspentOutputsRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.UnspentOutputsResponse.SerializeToString,
            ),
            'getUtxoInsFromData': grpc.unary_unary_rpc_method_handler(
                    servicer.getUtxoInsFromData,
                    request_deserializer=savour__rpc_dot_wallet__pb2.UtxoInsFromDataRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.UtxoInsResponse.SerializeToString,
            ),
            'getAccountTxFromData': grpc.unary_unary_rpc_method_handler(
                    servicer.getAccountTxFromData,
                    request_deserializer=savour__rpc_dot_wallet__pb2.TxFromDataRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.AccountTxResponse.SerializeToString,
            ),
            'getUtxoTxFromData': grpc.unary_unary_rpc_method_handler(
                    servicer.getUtxoTxFromData,
                    request_deserializer=savour__rpc_dot_wallet__pb2.TxFromDataRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.UtxoTxResponse.SerializeToString,
            ),
            'getAccountTxFromSignedData': grpc.unary_unary_rpc_method_handler(
                    servicer.getAccountTxFromSignedData,
                    request_deserializer=savour__rpc_dot_wallet__pb2.TxFromSignedDataRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.AccountTxResponse.SerializeToString,
            ),
            'GetUtxoTxFromSignedData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUtxoTxFromSignedData,
                    request_deserializer=savour__rpc_dot_wallet__pb2.TxFromSignedDataRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.UtxoTxResponse.SerializeToString,
            ),
            'createAccountSignedTx': grpc.unary_unary_rpc_method_handler(
                    servicer.createAccountSignedTx,
                    request_deserializer=savour__rpc_dot_wallet__pb2.CreateAccountSignedTxRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.CreateSignedTxResponse.SerializeToString,
            ),
            'createAccountTx': grpc.unary_unary_rpc_method_handler(
                    servicer.createAccountTx,
                    request_deserializer=savour__rpc_dot_wallet__pb2.CreateAccountTxRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.CreateAccountTxResponse.SerializeToString,
            ),
            'createUtxoSignedTx': grpc.unary_unary_rpc_method_handler(
                    servicer.createUtxoSignedTx,
                    request_deserializer=savour__rpc_dot_wallet__pb2.CreateUtxoSignedTxRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.CreateSignedTxResponse.SerializeToString,
            ),
            'createUtxoTx': grpc.unary_unary_rpc_method_handler(
                    servicer.createUtxoTx,
                    request_deserializer=savour__rpc_dot_wallet__pb2.CreateUtxoTxRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.CreateUtxoTxResponse.SerializeToString,
            ),
            'verifyAccountSignedTx': grpc.unary_unary_rpc_method_handler(
                    servicer.verifyAccountSignedTx,
                    request_deserializer=savour__rpc_dot_wallet__pb2.VerifySignedTxRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.VerifySignedTxResponse.SerializeToString,
            ),
            'verifyUtxoSignedTx': grpc.unary_unary_rpc_method_handler(
                    servicer.verifyUtxoSignedTx,
                    request_deserializer=savour__rpc_dot_wallet__pb2.VerifySignedTxRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.VerifySignedTxResponse.SerializeToString,
            ),
            'ABIBinToJSON': grpc.unary_unary_rpc_method_handler(
                    servicer.ABIBinToJSON,
                    request_deserializer=savour__rpc_dot_wallet__pb2.ABIBinToJSONRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.ABIBinToJSONResponse.SerializeToString,
            ),
            'ABIJSONToBin': grpc.unary_unary_rpc_method_handler(
                    servicer.ABIJSONToBin,
                    request_deserializer=savour__rpc_dot_wallet__pb2.ABIJSONToBinRequest.FromString,
                    response_serializer=savour__rpc_dot_wallet__pb2.ABIJSONToBinResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'savour_rpc.wallet.WalletService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WalletService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getSupportCoins(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getSupportCoins',
            savour__rpc_dot_wallet__pb2.SupportCoinsRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.SupportCoinsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def convertAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/convertAddress',
            savour__rpc_dot_wallet__pb2.ConvertAddressRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.ConvertAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def validAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/validAddress',
            savour__rpc_dot_wallet__pb2.ValidAddressRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.ValidAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getBlock',
            savour__rpc_dot_wallet__pb2.BlockRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.BlockResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getNonce(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getNonce',
            savour__rpc_dot_wallet__pb2.NonceRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.NonceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getGasPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getGasPrice',
            savour__rpc_dot_wallet__pb2.GasPriceRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.GasPriceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getBalance',
            savour__rpc_dot_wallet__pb2.BalanceRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.BalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getAccount',
            savour__rpc_dot_wallet__pb2.AccountRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.AccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getMinRent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getMinRent',
            savour__rpc_dot_wallet__pb2.MinRentRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.MinRentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/SendTx',
            savour__rpc_dot_wallet__pb2.SendTxRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.SendTxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getTxByAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getTxByAddress',
            savour__rpc_dot_wallet__pb2.TxAddressRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.TxAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getTxByHash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getTxByHash',
            savour__rpc_dot_wallet__pb2.TxHashRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.TxHashResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getUtxo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getUtxo',
            savour__rpc_dot_wallet__pb2.UtxoRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.UtxoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getUnspentOutputs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getUnspentOutputs',
            savour__rpc_dot_wallet__pb2.UnspentOutputsRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.UnspentOutputsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getUtxoInsFromData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getUtxoInsFromData',
            savour__rpc_dot_wallet__pb2.UtxoInsFromDataRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.UtxoInsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAccountTxFromData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getAccountTxFromData',
            savour__rpc_dot_wallet__pb2.TxFromDataRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.AccountTxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getUtxoTxFromData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getUtxoTxFromData',
            savour__rpc_dot_wallet__pb2.TxFromDataRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.UtxoTxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAccountTxFromSignedData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/getAccountTxFromSignedData',
            savour__rpc_dot_wallet__pb2.TxFromSignedDataRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.AccountTxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUtxoTxFromSignedData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/GetUtxoTxFromSignedData',
            savour__rpc_dot_wallet__pb2.TxFromSignedDataRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.UtxoTxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createAccountSignedTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/createAccountSignedTx',
            savour__rpc_dot_wallet__pb2.CreateAccountSignedTxRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.CreateSignedTxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createAccountTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/createAccountTx',
            savour__rpc_dot_wallet__pb2.CreateAccountTxRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.CreateAccountTxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createUtxoSignedTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/createUtxoSignedTx',
            savour__rpc_dot_wallet__pb2.CreateUtxoSignedTxRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.CreateSignedTxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createUtxoTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/createUtxoTx',
            savour__rpc_dot_wallet__pb2.CreateUtxoTxRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.CreateUtxoTxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def verifyAccountSignedTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/verifyAccountSignedTx',
            savour__rpc_dot_wallet__pb2.VerifySignedTxRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.VerifySignedTxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def verifyUtxoSignedTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/verifyUtxoSignedTx',
            savour__rpc_dot_wallet__pb2.VerifySignedTxRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.VerifySignedTxResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ABIBinToJSON(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/ABIBinToJSON',
            savour__rpc_dot_wallet__pb2.ABIBinToJSONRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.ABIBinToJSONResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ABIJSONToBin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/savour_rpc.wallet.WalletService/ABIJSONToBin',
            savour__rpc_dot_wallet__pb2.ABIJSONToBinRequest.SerializeToString,
            savour__rpc_dot_wallet__pb2.ABIJSONToBinResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
