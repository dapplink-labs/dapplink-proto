// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: savourrpc/keylocker.proto

package keylocker

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReturnCode int32

const (
	ReturnCode_SUCCESS ReturnCode = 0
	ReturnCode_ERROR   ReturnCode = 1
)

// Enum value maps for ReturnCode.
var (
	ReturnCode_name = map[int32]string{
		0: "SUCCESS",
		1: "ERROR",
	}
	ReturnCode_value = map[string]int32{
		"SUCCESS": 0,
		"ERROR":   1,
	}
)

func (x ReturnCode) Enum() *ReturnCode {
	p := new(ReturnCode)
	*p = x
	return p
}

func (x ReturnCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReturnCode) Descriptor() protoreflect.EnumDescriptor {
	return file_savourrpc_keylocker_proto_enumTypes[0].Descriptor()
}

func (ReturnCode) Type() protoreflect.EnumType {
	return &file_savourrpc_keylocker_proto_enumTypes[0]
}

func (x ReturnCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReturnCode.Descriptor instead.
func (ReturnCode) EnumDescriptor() ([]byte, []int) {
	return file_savourrpc_keylocker_proto_rawDescGZIP(), []int{0}
}

type SocialKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *SocialKey) Reset() {
	*x = SocialKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_keylocker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialKey) ProtoMessage() {}

func (x *SocialKey) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_keylocker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialKey.ProtoReflect.Descriptor instead.
func (*SocialKey) Descriptor() ([]byte, []int) {
	return file_savourrpc_keylocker_proto_rawDescGZIP(), []int{0}
}

func (x *SocialKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SocialKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type WalletHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Head string `protobuf:"bytes,3,opt,name=head,proto3" json:"head,omitempty"`
}

func (x *WalletHeader) Reset() {
	*x = WalletHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_keylocker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletHeader) ProtoMessage() {}

func (x *WalletHeader) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_keylocker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletHeader.ProtoReflect.Descriptor instead.
func (*WalletHeader) Descriptor() ([]byte, []int) {
	return file_savourrpc_keylocker_proto_rawDescGZIP(), []int{1}
}

func (x *WalletHeader) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WalletHeader) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

type SupportChainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	Chain         string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	Network       string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
}

func (x *SupportChainReq) Reset() {
	*x = SupportChainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_keylocker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportChainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportChainReq) ProtoMessage() {}

func (x *SupportChainReq) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_keylocker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportChainReq.ProtoReflect.Descriptor instead.
func (*SupportChainReq) Descriptor() ([]byte, []int) {
	return file_savourrpc_keylocker_proto_rawDescGZIP(), []int{2}
}

func (x *SupportChainReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *SupportChainReq) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *SupportChainReq) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type SupportChainRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=savourrpc.keylocker.ReturnCode" json:"code,omitempty"`
	Msg     string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Support bool       `protobuf:"varint,3,opt,name=support,proto3" json:"support,omitempty"`
}

func (x *SupportChainRep) Reset() {
	*x = SupportChainRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_keylocker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportChainRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportChainRep) ProtoMessage() {}

func (x *SupportChainRep) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_keylocker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportChainRep.ProtoReflect.Descriptor instead.
func (*SupportChainRep) Descriptor() ([]byte, []int) {
	return file_savourrpc_keylocker_proto_rawDescGZIP(), []int{3}
}

func (x *SupportChainRep) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_SUCCESS
}

func (x *SupportChainRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SupportChainRep) GetSupport() bool {
	if x != nil {
		return x.Support
	}
	return false
}

type SetSocialKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	Chain         string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	Uuid          string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key           string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Password      string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	SocialCode    string `protobuf:"bytes,6,opt,name=social_code,json=socialCode,proto3" json:"social_code,omitempty"`
}

func (x *SetSocialKeyReq) Reset() {
	*x = SetSocialKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_keylocker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSocialKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSocialKeyReq) ProtoMessage() {}

func (x *SetSocialKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_keylocker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSocialKeyReq.ProtoReflect.Descriptor instead.
func (*SetSocialKeyReq) Descriptor() ([]byte, []int) {
	return file_savourrpc_keylocker_proto_rawDescGZIP(), []int{4}
}

func (x *SetSocialKeyReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *SetSocialKeyReq) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *SetSocialKeyReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SetSocialKeyReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetSocialKeyReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SetSocialKeyReq) GetSocialCode() string {
	if x != nil {
		return x.SocialCode
	}
	return ""
}

type SetSocialKeyRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=savourrpc.keylocker.ReturnCode" json:"code,omitempty"`
	Msg       string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Pub       string     `protobuf:"bytes,3,opt,name=pub,proto3" json:"pub,omitempty"`
	Priv      string     `protobuf:"bytes,4,opt,name=priv,proto3" json:"priv,omitempty"`
	CryptoWay string     `protobuf:"bytes,5,opt,name=crypto_way,json=cryptoWay,proto3" json:"crypto_way,omitempty"`
	FileCid   string     `protobuf:"bytes,6,opt,name=file_cid,json=fileCid,proto3" json:"file_cid,omitempty"`
	Contract  string     `protobuf:"bytes,7,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *SetSocialKeyRep) Reset() {
	*x = SetSocialKeyRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_keylocker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSocialKeyRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSocialKeyRep) ProtoMessage() {}

func (x *SetSocialKeyRep) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_keylocker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSocialKeyRep.ProtoReflect.Descriptor instead.
func (*SetSocialKeyRep) Descriptor() ([]byte, []int) {
	return file_savourrpc_keylocker_proto_rawDescGZIP(), []int{5}
}

func (x *SetSocialKeyRep) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_SUCCESS
}

func (x *SetSocialKeyRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SetSocialKeyRep) GetPub() string {
	if x != nil {
		return x.Pub
	}
	return ""
}

func (x *SetSocialKeyRep) GetPriv() string {
	if x != nil {
		return x.Priv
	}
	return ""
}

func (x *SetSocialKeyRep) GetCryptoWay() string {
	if x != nil {
		return x.CryptoWay
	}
	return ""
}

func (x *SetSocialKeyRep) GetFileCid() string {
	if x != nil {
		return x.FileCid
	}
	return ""
}

func (x *SetSocialKeyRep) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

type GetSocialKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	Chain         string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	Uuid          string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	FileCid       string `protobuf:"bytes,4,opt,name=file_cid,json=fileCid,proto3" json:"file_cid,omitempty"`
	Contract      string `protobuf:"bytes,5,opt,name=contract,proto3" json:"contract,omitempty"`
	SocialCode    string `protobuf:"bytes,6,opt,name=social_code,json=socialCode,proto3" json:"social_code,omitempty"`
}

func (x *GetSocialKeyReq) Reset() {
	*x = GetSocialKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_keylocker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSocialKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSocialKeyReq) ProtoMessage() {}

func (x *GetSocialKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_keylocker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSocialKeyReq.ProtoReflect.Descriptor instead.
func (*GetSocialKeyReq) Descriptor() ([]byte, []int) {
	return file_savourrpc_keylocker_proto_rawDescGZIP(), []int{6}
}

func (x *GetSocialKeyReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *GetSocialKeyReq) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetSocialKeyReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetSocialKeyReq) GetFileCid() string {
	if x != nil {
		return x.FileCid
	}
	return ""
}

func (x *GetSocialKeyReq) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *GetSocialKeyReq) GetSocialCode() string {
	if x != nil {
		return x.SocialCode
	}
	return ""
}

type GetSocialKeyRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ReturnCode   `protobuf:"varint,1,opt,name=code,proto3,enum=savourrpc.keylocker.ReturnCode" json:"code,omitempty"`
	Msg     string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	KeyList []*SocialKey `protobuf:"bytes,3,rep,name=key_list,json=keyList,proto3" json:"key_list,omitempty"`
}

func (x *GetSocialKeyRep) Reset() {
	*x = GetSocialKeyRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_keylocker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSocialKeyRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSocialKeyRep) ProtoMessage() {}

func (x *GetSocialKeyRep) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_keylocker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSocialKeyRep.ProtoReflect.Descriptor instead.
func (*GetSocialKeyRep) Descriptor() ([]byte, []int) {
	return file_savourrpc_keylocker_proto_rawDescGZIP(), []int{7}
}

func (x *GetSocialKeyRep) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_SUCCESS
}

func (x *GetSocialKeyRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetSocialKeyRep) GetKeyList() []*SocialKey {
	if x != nil {
		return x.KeyList
	}
	return nil
}

type SetWalletHeadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	Chain         string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	WalletUuid    string `protobuf:"bytes,3,opt,name=wallet_uuid,json=walletUuid,proto3" json:"wallet_uuid,omitempty"`
	WalletHead    string `protobuf:"bytes,4,opt,name=wallet_head,json=walletHead,proto3" json:"wallet_head,omitempty"`
	Password      string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	SocialCode    string `protobuf:"bytes,6,opt,name=social_code,json=socialCode,proto3" json:"social_code,omitempty"`
}

func (x *SetWalletHeadReq) Reset() {
	*x = SetWalletHeadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_keylocker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWalletHeadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWalletHeadReq) ProtoMessage() {}

func (x *SetWalletHeadReq) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_keylocker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWalletHeadReq.ProtoReflect.Descriptor instead.
func (*SetWalletHeadReq) Descriptor() ([]byte, []int) {
	return file_savourrpc_keylocker_proto_rawDescGZIP(), []int{8}
}

func (x *SetWalletHeadReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *SetWalletHeadReq) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *SetWalletHeadReq) GetWalletUuid() string {
	if x != nil {
		return x.WalletUuid
	}
	return ""
}

func (x *SetWalletHeadReq) GetWalletHead() string {
	if x != nil {
		return x.WalletHead
	}
	return ""
}

func (x *SetWalletHeadReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SetWalletHeadReq) GetSocialCode() string {
	if x != nil {
		return x.SocialCode
	}
	return ""
}

type SetWalletHeadRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=savourrpc.keylocker.ReturnCode" json:"code,omitempty"`
	Msg       string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Pub       string     `protobuf:"bytes,3,opt,name=pub,proto3" json:"pub,omitempty"`
	Priv      string     `protobuf:"bytes,4,opt,name=priv,proto3" json:"priv,omitempty"`
	CryptoWay string     `protobuf:"bytes,5,opt,name=crypto_way,json=cryptoWay,proto3" json:"crypto_way,omitempty"`
	FileCid   string     `protobuf:"bytes,6,opt,name=file_cid,json=fileCid,proto3" json:"file_cid,omitempty"`
	Contract  string     `protobuf:"bytes,7,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *SetWalletHeadRep) Reset() {
	*x = SetWalletHeadRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_keylocker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWalletHeadRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWalletHeadRep) ProtoMessage() {}

func (x *SetWalletHeadRep) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_keylocker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWalletHeadRep.ProtoReflect.Descriptor instead.
func (*SetWalletHeadRep) Descriptor() ([]byte, []int) {
	return file_savourrpc_keylocker_proto_rawDescGZIP(), []int{9}
}

func (x *SetWalletHeadRep) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_SUCCESS
}

func (x *SetWalletHeadRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SetWalletHeadRep) GetPub() string {
	if x != nil {
		return x.Pub
	}
	return ""
}

func (x *SetWalletHeadRep) GetPriv() string {
	if x != nil {
		return x.Priv
	}
	return ""
}

func (x *SetWalletHeadRep) GetCryptoWay() string {
	if x != nil {
		return x.CryptoWay
	}
	return ""
}

func (x *SetWalletHeadRep) GetFileCid() string {
	if x != nil {
		return x.FileCid
	}
	return ""
}

func (x *SetWalletHeadRep) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

type GetWalletHeadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	Chain         string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	Uuid          string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	FileCid       string `protobuf:"bytes,4,opt,name=file_cid,json=fileCid,proto3" json:"file_cid,omitempty"`
	Contract      string `protobuf:"bytes,5,opt,name=contract,proto3" json:"contract,omitempty"`
	SocialCode    string `protobuf:"bytes,6,opt,name=social_code,json=socialCode,proto3" json:"social_code,omitempty"`
}

func (x *GetWalletHeadReq) Reset() {
	*x = GetWalletHeadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_keylocker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletHeadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletHeadReq) ProtoMessage() {}

func (x *GetWalletHeadReq) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_keylocker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletHeadReq.ProtoReflect.Descriptor instead.
func (*GetWalletHeadReq) Descriptor() ([]byte, []int) {
	return file_savourrpc_keylocker_proto_rawDescGZIP(), []int{10}
}

func (x *GetWalletHeadReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *GetWalletHeadReq) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetWalletHeadReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetWalletHeadReq) GetFileCid() string {
	if x != nil {
		return x.FileCid
	}
	return ""
}

func (x *GetWalletHeadReq) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *GetWalletHeadReq) GetSocialCode() string {
	if x != nil {
		return x.SocialCode
	}
	return ""
}

type GetWalletHeadRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       ReturnCode      `protobuf:"varint,1,opt,name=code,proto3,enum=savourrpc.keylocker.ReturnCode" json:"code,omitempty"`
	Msg        string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	HeaderList []*WalletHeader `protobuf:"bytes,3,rep,name=header_list,json=headerList,proto3" json:"header_list,omitempty"`
}

func (x *GetWalletHeadRep) Reset() {
	*x = GetWalletHeadRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_keylocker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletHeadRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletHeadRep) ProtoMessage() {}

func (x *GetWalletHeadRep) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_keylocker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletHeadRep.ProtoReflect.Descriptor instead.
func (*GetWalletHeadRep) Descriptor() ([]byte, []int) {
	return file_savourrpc_keylocker_proto_rawDescGZIP(), []int{11}
}

func (x *GetWalletHeadRep) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_SUCCESS
}

func (x *GetWalletHeadRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetWalletHeadRep) GetHeaderList() []*WalletHeader {
	if x != nil {
		return x.HeaderList
	}
	return nil
}

var File_savourrpc_keylocker_proto protoreflect.FileDescriptor

var file_savourrpc_keylocker_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2f, 0x6b, 0x65, 0x79, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x73, 0x61, 0x76,
	0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x22, 0x2d, 0x0a, 0x09, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x32, 0x0a, 0x0c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x65, 0x61, 0x64, 0x22, 0x68, 0x0a, 0x0f, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x72, 0x0a,
	0x0f, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x70,
	0x12, 0x33, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x22, 0xb1, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x12, 0x33, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x72, 0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x75, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70,
	0x75, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x69, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x72, 0x69, 0x76, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x5f, 0x77, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x57, 0x61, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0xba, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x12, 0x33, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x61,
	0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72,
	0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xce, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x68, 0x65, 0x61,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0xd5, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x70, 0x12, 0x33, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e,
	0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x75, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x75, 0x62, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x72, 0x69, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x72,
	0x69, 0x76, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x5f, 0x77, 0x61, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x57, 0x61,
	0x79, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x12, 0x33, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x61, 0x76, 0x6f,
	0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x42, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x72, 0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x2a, 0x24, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x32, 0xf1, 0x03, 0x0a,
	0x10, 0x4c, 0x65, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5f, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x12, 0x24, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63,
	0x2e, 0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x61, 0x76,
	0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x70,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4b,
	0x65, 0x79, 0x12, 0x24, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x6b,
	0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75,
	0x72, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x74, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79,
	0x12, 0x24, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72,
	0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x5f,
	0x0a, 0x0d, 0x73, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x25, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72,
	0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12,
	0x5f, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x25, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x72, 0x70, 0x63, 0x2e, 0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x22, 0x00,
	0x42, 0x2b, 0x0a, 0x16, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x2e, 0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5a, 0x11, 0x2e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x65, 0x79, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_savourrpc_keylocker_proto_rawDescOnce sync.Once
	file_savourrpc_keylocker_proto_rawDescData = file_savourrpc_keylocker_proto_rawDesc
)

func file_savourrpc_keylocker_proto_rawDescGZIP() []byte {
	file_savourrpc_keylocker_proto_rawDescOnce.Do(func() {
		file_savourrpc_keylocker_proto_rawDescData = protoimpl.X.CompressGZIP(file_savourrpc_keylocker_proto_rawDescData)
	})
	return file_savourrpc_keylocker_proto_rawDescData
}

var file_savourrpc_keylocker_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_savourrpc_keylocker_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_savourrpc_keylocker_proto_goTypes = []interface{}{
	(ReturnCode)(0),          // 0: savourrpc.keylocker.ReturnCode
	(*SocialKey)(nil),        // 1: savourrpc.keylocker.SocialKey
	(*WalletHeader)(nil),     // 2: savourrpc.keylocker.WalletHeader
	(*SupportChainReq)(nil),  // 3: savourrpc.keylocker.SupportChainReq
	(*SupportChainRep)(nil),  // 4: savourrpc.keylocker.SupportChainRep
	(*SetSocialKeyReq)(nil),  // 5: savourrpc.keylocker.SetSocialKeyReq
	(*SetSocialKeyRep)(nil),  // 6: savourrpc.keylocker.SetSocialKeyRep
	(*GetSocialKeyReq)(nil),  // 7: savourrpc.keylocker.GetSocialKeyReq
	(*GetSocialKeyRep)(nil),  // 8: savourrpc.keylocker.GetSocialKeyRep
	(*SetWalletHeadReq)(nil), // 9: savourrpc.keylocker.SetWalletHeadReq
	(*SetWalletHeadRep)(nil), // 10: savourrpc.keylocker.SetWalletHeadRep
	(*GetWalletHeadReq)(nil), // 11: savourrpc.keylocker.GetWalletHeadReq
	(*GetWalletHeadRep)(nil), // 12: savourrpc.keylocker.GetWalletHeadRep
}
var file_savourrpc_keylocker_proto_depIdxs = []int32{
	0,  // 0: savourrpc.keylocker.SupportChainRep.code:type_name -> savourrpc.keylocker.ReturnCode
	0,  // 1: savourrpc.keylocker.SetSocialKeyRep.code:type_name -> savourrpc.keylocker.ReturnCode
	0,  // 2: savourrpc.keylocker.GetSocialKeyRep.code:type_name -> savourrpc.keylocker.ReturnCode
	1,  // 3: savourrpc.keylocker.GetSocialKeyRep.key_list:type_name -> savourrpc.keylocker.SocialKey
	0,  // 4: savourrpc.keylocker.SetWalletHeadRep.code:type_name -> savourrpc.keylocker.ReturnCode
	0,  // 5: savourrpc.keylocker.GetWalletHeadRep.code:type_name -> savourrpc.keylocker.ReturnCode
	2,  // 6: savourrpc.keylocker.GetWalletHeadRep.header_list:type_name -> savourrpc.keylocker.WalletHeader
	3,  // 7: savourrpc.keylocker.LeyLockerService.getSupportChain:input_type -> savourrpc.keylocker.SupportChainReq
	5,  // 8: savourrpc.keylocker.LeyLockerService.setSocialKey:input_type -> savourrpc.keylocker.SetSocialKeyReq
	7,  // 9: savourrpc.keylocker.LeyLockerService.getSocialKey:input_type -> savourrpc.keylocker.GetSocialKeyReq
	9,  // 10: savourrpc.keylocker.LeyLockerService.setWalletHead:input_type -> savourrpc.keylocker.SetWalletHeadReq
	11, // 11: savourrpc.keylocker.LeyLockerService.getWalletHead:input_type -> savourrpc.keylocker.GetWalletHeadReq
	4,  // 12: savourrpc.keylocker.LeyLockerService.getSupportChain:output_type -> savourrpc.keylocker.SupportChainRep
	6,  // 13: savourrpc.keylocker.LeyLockerService.setSocialKey:output_type -> savourrpc.keylocker.SetSocialKeyRep
	8,  // 14: savourrpc.keylocker.LeyLockerService.getSocialKey:output_type -> savourrpc.keylocker.GetSocialKeyRep
	10, // 15: savourrpc.keylocker.LeyLockerService.setWalletHead:output_type -> savourrpc.keylocker.SetWalletHeadRep
	12, // 16: savourrpc.keylocker.LeyLockerService.getWalletHead:output_type -> savourrpc.keylocker.GetWalletHeadRep
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_savourrpc_keylocker_proto_init() }
func file_savourrpc_keylocker_proto_init() {
	if File_savourrpc_keylocker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_savourrpc_keylocker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_keylocker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_keylocker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportChainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_keylocker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportChainRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_keylocker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSocialKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_keylocker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSocialKeyRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_keylocker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSocialKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_keylocker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSocialKeyRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_keylocker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWalletHeadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_keylocker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWalletHeadRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_keylocker_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletHeadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_keylocker_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletHeadRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_savourrpc_keylocker_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_savourrpc_keylocker_proto_goTypes,
		DependencyIndexes: file_savourrpc_keylocker_proto_depIdxs,
		EnumInfos:         file_savourrpc_keylocker_proto_enumTypes,
		MessageInfos:      file_savourrpc_keylocker_proto_msgTypes,
	}.Build()
	File_savourrpc_keylocker_proto = out.File
	file_savourrpc_keylocker_proto_rawDesc = nil
	file_savourrpc_keylocker_proto_goTypes = nil
	file_savourrpc_keylocker_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LeyLockerServiceClient is the client API for LeyLockerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LeyLockerServiceClient interface {
	GetSupportChain(ctx context.Context, in *SupportChainReq, opts ...grpc.CallOption) (*SupportChainRep, error)
	SetSocialKey(ctx context.Context, in *SetSocialKeyReq, opts ...grpc.CallOption) (*SetSocialKeyRep, error)
	GetSocialKey(ctx context.Context, in *GetSocialKeyReq, opts ...grpc.CallOption) (*GetSocialKeyRep, error)
	SetWalletHead(ctx context.Context, in *SetWalletHeadReq, opts ...grpc.CallOption) (*SetWalletHeadRep, error)
	GetWalletHead(ctx context.Context, in *GetWalletHeadReq, opts ...grpc.CallOption) (*GetWalletHeadRep, error)
}

type leyLockerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLeyLockerServiceClient(cc grpc.ClientConnInterface) LeyLockerServiceClient {
	return &leyLockerServiceClient{cc}
}

func (c *leyLockerServiceClient) GetSupportChain(ctx context.Context, in *SupportChainReq, opts ...grpc.CallOption) (*SupportChainRep, error) {
	out := new(SupportChainRep)
	err := c.cc.Invoke(ctx, "/savourrpc.keylocker.LeyLockerService/getSupportChain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *leyLockerServiceClient) SetSocialKey(ctx context.Context, in *SetSocialKeyReq, opts ...grpc.CallOption) (*SetSocialKeyRep, error) {
	out := new(SetSocialKeyRep)
	err := c.cc.Invoke(ctx, "/savourrpc.keylocker.LeyLockerService/setSocialKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *leyLockerServiceClient) GetSocialKey(ctx context.Context, in *GetSocialKeyReq, opts ...grpc.CallOption) (*GetSocialKeyRep, error) {
	out := new(GetSocialKeyRep)
	err := c.cc.Invoke(ctx, "/savourrpc.keylocker.LeyLockerService/getSocialKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *leyLockerServiceClient) SetWalletHead(ctx context.Context, in *SetWalletHeadReq, opts ...grpc.CallOption) (*SetWalletHeadRep, error) {
	out := new(SetWalletHeadRep)
	err := c.cc.Invoke(ctx, "/savourrpc.keylocker.LeyLockerService/setWalletHead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *leyLockerServiceClient) GetWalletHead(ctx context.Context, in *GetWalletHeadReq, opts ...grpc.CallOption) (*GetWalletHeadRep, error) {
	out := new(GetWalletHeadRep)
	err := c.cc.Invoke(ctx, "/savourrpc.keylocker.LeyLockerService/getWalletHead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LeyLockerServiceServer is the server API for LeyLockerService service.
type LeyLockerServiceServer interface {
	GetSupportChain(context.Context, *SupportChainReq) (*SupportChainRep, error)
	SetSocialKey(context.Context, *SetSocialKeyReq) (*SetSocialKeyRep, error)
	GetSocialKey(context.Context, *GetSocialKeyReq) (*GetSocialKeyRep, error)
	SetWalletHead(context.Context, *SetWalletHeadReq) (*SetWalletHeadRep, error)
	GetWalletHead(context.Context, *GetWalletHeadReq) (*GetWalletHeadRep, error)
}

// UnimplementedLeyLockerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLeyLockerServiceServer struct {
}

func (*UnimplementedLeyLockerServiceServer) GetSupportChain(context.Context, *SupportChainReq) (*SupportChainRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSupportChain not implemented")
}
func (*UnimplementedLeyLockerServiceServer) SetSocialKey(context.Context, *SetSocialKeyReq) (*SetSocialKeyRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSocialKey not implemented")
}
func (*UnimplementedLeyLockerServiceServer) GetSocialKey(context.Context, *GetSocialKeyReq) (*GetSocialKeyRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSocialKey not implemented")
}
func (*UnimplementedLeyLockerServiceServer) SetWalletHead(context.Context, *SetWalletHeadReq) (*SetWalletHeadRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetWalletHead not implemented")
}
func (*UnimplementedLeyLockerServiceServer) GetWalletHead(context.Context, *GetWalletHeadReq) (*GetWalletHeadRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWalletHead not implemented")
}

func RegisterLeyLockerServiceServer(s *grpc.Server, srv LeyLockerServiceServer) {
	s.RegisterService(&_LeyLockerService_serviceDesc, srv)
}

func _LeyLockerService_GetSupportChain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SupportChainReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeyLockerServiceServer).GetSupportChain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/savourrpc.keylocker.LeyLockerService/GetSupportChain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeyLockerServiceServer).GetSupportChain(ctx, req.(*SupportChainReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LeyLockerService_SetSocialKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSocialKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeyLockerServiceServer).SetSocialKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/savourrpc.keylocker.LeyLockerService/SetSocialKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeyLockerServiceServer).SetSocialKey(ctx, req.(*SetSocialKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LeyLockerService_GetSocialKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSocialKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeyLockerServiceServer).GetSocialKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/savourrpc.keylocker.LeyLockerService/GetSocialKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeyLockerServiceServer).GetSocialKey(ctx, req.(*GetSocialKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LeyLockerService_SetWalletHead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetWalletHeadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeyLockerServiceServer).SetWalletHead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/savourrpc.keylocker.LeyLockerService/SetWalletHead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeyLockerServiceServer).SetWalletHead(ctx, req.(*SetWalletHeadReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LeyLockerService_GetWalletHead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWalletHeadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeyLockerServiceServer).GetWalletHead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/savourrpc.keylocker.LeyLockerService/GetWalletHead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeyLockerServiceServer).GetWalletHead(ctx, req.(*GetWalletHeadReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _LeyLockerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "savourrpc.keylocker.LeyLockerService",
	HandlerType: (*LeyLockerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getSupportChain",
			Handler:    _LeyLockerService_GetSupportChain_Handler,
		},
		{
			MethodName: "setSocialKey",
			Handler:    _LeyLockerService_SetSocialKey_Handler,
		},
		{
			MethodName: "getSocialKey",
			Handler:    _LeyLockerService_GetSocialKey_Handler,
		},
		{
			MethodName: "setWalletHead",
			Handler:    _LeyLockerService_SetWalletHead_Handler,
		},
		{
			MethodName: "getWalletHead",
			Handler:    _LeyLockerService_GetWalletHead_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "savourrpc/keylocker.proto",
}
