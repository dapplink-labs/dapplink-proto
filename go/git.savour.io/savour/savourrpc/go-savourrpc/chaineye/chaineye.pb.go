// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: savourrpc/chaineye.proto

package chaineye

import (
	common "git.savour.io/savour/savourrpc/go-savourrpc/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ArticleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Abstract string `protobuf:"bytes,3,opt,name=abstract,proto3" json:"abstract,omitempty"`
	Type     int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Author   string `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	Views    int32  `protobuf:"varint,6,opt,name=views,proto3" json:"views,omitempty"`
	AddTime  string `protobuf:"bytes,7,opt,name=add_time,json=addTime,proto3" json:"add_time,omitempty"`
	UpdTime  string `protobuf:"bytes,8,opt,name=upd_time,json=updTime,proto3" json:"upd_time,omitempty"`
	Cover    string `protobuf:"bytes,9,opt,name=cover,proto3" json:"cover,omitempty"`
	Like     int32  `protobuf:"varint,10,opt,name=like,proto3" json:"like,omitempty"`
}

func (x *ArticleList) Reset() {
	*x = ArticleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleList) ProtoMessage() {}

func (x *ArticleList) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleList.ProtoReflect.Descriptor instead.
func (*ArticleList) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{0}
}

func (x *ArticleList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ArticleList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleList) GetAbstract() string {
	if x != nil {
		return x.Abstract
	}
	return ""
}

func (x *ArticleList) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ArticleList) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ArticleList) GetViews() int32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *ArticleList) GetAddTime() string {
	if x != nil {
		return x.AddTime
	}
	return ""
}

func (x *ArticleList) GetUpdTime() string {
	if x != nil {
		return x.UpdTime
	}
	return ""
}

func (x *ArticleList) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ArticleList) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

type CommentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Detail  string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	Author  string `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	AddTime string `protobuf:"bytes,4,opt,name=add_time,json=addTime,proto3" json:"add_time,omitempty"`
	Views   int32  `protobuf:"varint,5,opt,name=views,proto3" json:"views,omitempty"`
	Like    int32  `protobuf:"varint,6,opt,name=like,proto3" json:"like,omitempty"`
	Reply   int32  `protobuf:"varint,7,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *CommentList) Reset() {
	*x = CommentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentList) ProtoMessage() {}

func (x *CommentList) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentList.ProtoReflect.Descriptor instead.
func (*CommentList) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{1}
}

func (x *CommentList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CommentList) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *CommentList) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CommentList) GetAddTime() string {
	if x != nil {
		return x.AddTime
	}
	return ""
}

func (x *CommentList) GetViews() int32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *CommentList) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *CommentList) GetReply() int32 {
	if x != nil {
		return x.Reply
	}
	return 0
}

type LikeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Asset  string `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	Amount string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *LikeList) Reset() {
	*x = LikeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeList) ProtoMessage() {}

func (x *LikeList) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeList.ProtoReflect.Descriptor instead.
func (*LikeList) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{2}
}

func (x *LikeList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LikeList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LikeList) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *LikeList) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type CatList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CatList) Reset() {
	*x = CatList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatList) ProtoMessage() {}

func (x *CatList) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatList.ProtoReflect.Descriptor instead.
func (*CatList) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{3}
}

func (x *CatList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CatList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AssetAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset   string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AssetAddress) Reset() {
	*x = AssetAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetAddress) ProtoMessage() {}

func (x *AssetAddress) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetAddress.ProtoReflect.Descriptor instead.
func (*AssetAddress) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{4}
}

func (x *AssetAddress) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *AssetAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ArticleCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	Type          int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ArticleCatReq) Reset() {
	*x = ArticleCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleCatReq) ProtoMessage() {}

func (x *ArticleCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleCatReq.ProtoReflect.Descriptor instead.
func (*ArticleCatReq) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{5}
}

func (x *ArticleCatReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *ArticleCatReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ArticleCatRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    common.ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=savourrpc.ReturnCode" json:"code,omitempty"`
	Msg     string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	CatList []*CatList        `protobuf:"bytes,3,rep,name=cat_list,json=catList,proto3" json:"cat_list,omitempty"`
}

func (x *ArticleCatRep) Reset() {
	*x = ArticleCatRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleCatRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleCatRep) ProtoMessage() {}

func (x *ArticleCatRep) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleCatRep.ProtoReflect.Descriptor instead.
func (*ArticleCatRep) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{6}
}

func (x *ArticleCatRep) GetCode() common.ReturnCode {
	if x != nil {
		return x.Code
	}
	return common.ReturnCode_SUCCESS
}

func (x *ArticleCatRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ArticleCatRep) GetCatList() []*CatList {
	if x != nil {
		return x.CatList
	}
	return nil
}

type ArticleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	Type          int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	CatId         string `protobuf:"bytes,3,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`
	Page          uint32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Pagesize      uint32 `protobuf:"varint,5,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
}

func (x *ArticleListReq) Reset() {
	*x = ArticleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleListReq) ProtoMessage() {}

func (x *ArticleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleListReq.ProtoReflect.Descriptor instead.
func (*ArticleListReq) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{7}
}

func (x *ArticleListReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *ArticleListReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ArticleListReq) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

func (x *ArticleListReq) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ArticleListReq) GetPagesize() uint32 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

type ArticleListRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     common.ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=savourrpc.ReturnCode" json:"code,omitempty"`
	Msg      string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Total    int32             `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Articles []*ArticleList    `protobuf:"bytes,4,rep,name=articles,proto3" json:"articles,omitempty"`
}

func (x *ArticleListRep) Reset() {
	*x = ArticleListRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleListRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleListRep) ProtoMessage() {}

func (x *ArticleListRep) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleListRep.ProtoReflect.Descriptor instead.
func (*ArticleListRep) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{8}
}

func (x *ArticleListRep) GetCode() common.ReturnCode {
	if x != nil {
		return x.Code
	}
	return common.ReturnCode_SUCCESS
}

func (x *ArticleListRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ArticleListRep) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ArticleListRep) GetArticles() []*ArticleList {
	if x != nil {
		return x.Articles
	}
	return nil
}

type ArticleDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	Type          int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Id            string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ArticleDetailReq) Reset() {
	*x = ArticleDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleDetailReq) ProtoMessage() {}

func (x *ArticleDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleDetailReq.ProtoReflect.Descriptor instead.
func (*ArticleDetailReq) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{9}
}

func (x *ArticleDetailReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *ArticleDetailReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ArticleDetailReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ArticleDetailRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     common.ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=savourrpc.ReturnCode" json:"code,omitempty"`
	Msg      string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Title    string            `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Detail   string            `protobuf:"bytes,4,opt,name=detail,proto3" json:"detail,omitempty"`
	AuthorId string            `protobuf:"bytes,5,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Author   string            `protobuf:"bytes,6,opt,name=author,proto3" json:"author,omitempty"`
	Views    int32             `protobuf:"varint,7,opt,name=views,proto3" json:"views,omitempty"`
	AddTime  string            `protobuf:"bytes,8,opt,name=add_time,json=addTime,proto3" json:"add_time,omitempty"`
	UpdTime  string            `protobuf:"bytes,9,opt,name=upd_time,json=updTime,proto3" json:"upd_time,omitempty"`
	Like     int32             `protobuf:"varint,10,opt,name=like,proto3" json:"like,omitempty"`
	Comments []*CommentList    `protobuf:"bytes,11,rep,name=comments,proto3" json:"comments,omitempty"`
	Likes    []*LikeList       `protobuf:"bytes,12,rep,name=likes,proto3" json:"likes,omitempty"`
}

func (x *ArticleDetailRep) Reset() {
	*x = ArticleDetailRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleDetailRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleDetailRep) ProtoMessage() {}

func (x *ArticleDetailRep) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleDetailRep.ProtoReflect.Descriptor instead.
func (*ArticleDetailRep) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{10}
}

func (x *ArticleDetailRep) GetCode() common.ReturnCode {
	if x != nil {
		return x.Code
	}
	return common.ReturnCode_SUCCESS
}

func (x *ArticleDetailRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ArticleDetailRep) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleDetailRep) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *ArticleDetailRep) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *ArticleDetailRep) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ArticleDetailRep) GetViews() int32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *ArticleDetailRep) GetAddTime() string {
	if x != nil {
		return x.AddTime
	}
	return ""
}

func (x *ArticleDetailRep) GetUpdTime() string {
	if x != nil {
		return x.UpdTime
	}
	return ""
}

func (x *ArticleDetailRep) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *ArticleDetailRep) GetComments() []*CommentList {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *ArticleDetailRep) GetLikes() []*LikeList {
	if x != nil {
		return x.Likes
	}
	return nil
}

type CommentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	ArticleId     string `protobuf:"bytes,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	Page          uint32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Pagesize      uint32 `protobuf:"varint,4,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
}

func (x *CommentListReq) Reset() {
	*x = CommentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListReq) ProtoMessage() {}

func (x *CommentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListReq.ProtoReflect.Descriptor instead.
func (*CommentListReq) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{11}
}

func (x *CommentListReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *CommentListReq) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *CommentListReq) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CommentListReq) GetPagesize() uint32 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

type CommentListRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     common.ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=savourrpc.ReturnCode" json:"code,omitempty"`
	Msg      string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Comments []*CommentList    `protobuf:"bytes,3,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *CommentListRep) Reset() {
	*x = CommentListRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListRep) ProtoMessage() {}

func (x *CommentListRep) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListRep.ProtoReflect.Descriptor instead.
func (*CommentListRep) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{12}
}

func (x *CommentListRep) GetCode() common.ReturnCode {
	if x != nil {
		return x.Code
	}
	return common.ReturnCode_SUCCESS
}

func (x *CommentListRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CommentListRep) GetComments() []*CommentList {
	if x != nil {
		return x.Comments
	}
	return nil
}

type AddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	AuthorId      string `protobuf:"bytes,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *AddressReq) Reset() {
	*x = AddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressReq) ProtoMessage() {}

func (x *AddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressReq.ProtoReflect.Descriptor instead.
func (*AddressReq) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{13}
}

func (x *AddressReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *AddressReq) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

type AddressRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         common.ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=savourrpc.ReturnCode" json:"code,omitempty"`
	Msg          string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	AssetAddress []*AssetAddress   `protobuf:"bytes,3,rep,name=asset_address,json=assetAddress,proto3" json:"asset_address,omitempty"`
}

func (x *AddressRep) Reset() {
	*x = AddressRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressRep) ProtoMessage() {}

func (x *AddressRep) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressRep.ProtoReflect.Descriptor instead.
func (*AddressRep) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{14}
}

func (x *AddressRep) GetCode() common.ReturnCode {
	if x != nil {
		return x.Code
	}
	return common.ReturnCode_SUCCESS
}

func (x *AddressRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddressRep) GetAssetAddress() []*AssetAddress {
	if x != nil {
		return x.AssetAddress
	}
	return nil
}

type LikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerToken string `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	TxHash        string `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	LikeFrom      string `protobuf:"bytes,3,opt,name=like_from,json=likeFrom,proto3" json:"like_from,omitempty"`
	LikeTo        string `protobuf:"bytes,4,opt,name=like_to,json=likeTo,proto3" json:"like_to,omitempty"`
	Amount        string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	AssetName     string `protobuf:"bytes,6,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`
	TokenAddress  string `protobuf:"bytes,7,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	AuthorId      string `protobuf:"bytes,8,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *LikeReq) Reset() {
	*x = LikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeReq) ProtoMessage() {}

func (x *LikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeReq.ProtoReflect.Descriptor instead.
func (*LikeReq) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{15}
}

func (x *LikeReq) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *LikeReq) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *LikeReq) GetLikeFrom() string {
	if x != nil {
		return x.LikeFrom
	}
	return ""
}

func (x *LikeReq) GetLikeTo() string {
	if x != nil {
		return x.LikeTo
	}
	return ""
}

func (x *LikeReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *LikeReq) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *LikeReq) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *LikeReq) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

type LikeRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code common.ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=savourrpc.ReturnCode" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *LikeRep) Reset() {
	*x = LikeRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_savourrpc_chaineye_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeRep) ProtoMessage() {}

func (x *LikeRep) ProtoReflect() protoreflect.Message {
	mi := &file_savourrpc_chaineye_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeRep.ProtoReflect.Descriptor instead.
func (*LikeRep) Descriptor() ([]byte, []int) {
	return file_savourrpc_chaineye_proto_rawDescGZIP(), []int{16}
}

func (x *LikeRep) GetCode() common.ReturnCode {
	if x != nil {
		return x.Code
	}
	return common.ReturnCode_SUCCESS
}

func (x *LikeRep) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_savourrpc_chaineye_proto protoreflect.FileDescriptor

var file_savourrpc_chaineye_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x65, 0x79, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x73, 0x61, 0x76, 0x6f,
	0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x1a, 0x16,
	0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x01, 0x0a, 0x0b, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x0b, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x69, 0x6b, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x5c, 0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x2d, 0x0a, 0x07, 0x43, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x4a, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x84,
	0x01, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x70,
	0x12, 0x29, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x36, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x65, 0x79, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x63, 0x61,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x0e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x12, 0x29, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x61,
	0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x3b, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0x5d, 0x0a,
	0x10, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x83, 0x03, 0x0a,
	0x10, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x70, 0x12, 0x29, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b,
	0x65, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32,
	0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65,
	0x79, 0x65, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6b,
	0x65, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x0e,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x12, 0x29,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73,
	0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3b, 0x0a, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65,
	0x79, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x50, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x0a, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x12, 0x29, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x45, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65,
	0x79, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xf8, 0x01,
	0x0a, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6b,
	0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69,
	0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x74,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x6b, 0x65, 0x54, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x07, 0x4c, 0x69, 0x6b, 0x65,
	0x52, 0x65, 0x70, 0x12, 0x29, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x32, 0xa3, 0x04, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70,
	0x63, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75,
	0x72, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x5a, 0x0a,
	0x0e, 0x67, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x22, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x65, 0x79, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x10, 0x67, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x2e,
	0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65,
	0x79, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0e, 0x67,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e,
	0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65,
	0x79, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x4c, 0x69,
	0x6b, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x61, 0x76, 0x6f,
	0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x61, 0x76, 0x6f,
	0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0b, 0x6c,
	0x69, 0x6b, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x61, 0x76,
	0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x2e,
	0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x2e, 0x4c, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x70, 0x22, 0x00, 0x42, 0x4e, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x61,
	0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x79, 0x65,
	0x5a, 0x34, 0x67, 0x69, 0x74, 0x2e, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x2e, 0x69, 0x6f, 0x2f,
	0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x2f, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63,
	0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_savourrpc_chaineye_proto_rawDescOnce sync.Once
	file_savourrpc_chaineye_proto_rawDescData = file_savourrpc_chaineye_proto_rawDesc
)

func file_savourrpc_chaineye_proto_rawDescGZIP() []byte {
	file_savourrpc_chaineye_proto_rawDescOnce.Do(func() {
		file_savourrpc_chaineye_proto_rawDescData = protoimpl.X.CompressGZIP(file_savourrpc_chaineye_proto_rawDescData)
	})
	return file_savourrpc_chaineye_proto_rawDescData
}

var file_savourrpc_chaineye_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_savourrpc_chaineye_proto_goTypes = []interface{}{
	(*ArticleList)(nil),      // 0: savourrpc.chaineye.ArticleList
	(*CommentList)(nil),      // 1: savourrpc.chaineye.CommentList
	(*LikeList)(nil),         // 2: savourrpc.chaineye.LikeList
	(*CatList)(nil),          // 3: savourrpc.chaineye.CatList
	(*AssetAddress)(nil),     // 4: savourrpc.chaineye.AssetAddress
	(*ArticleCatReq)(nil),    // 5: savourrpc.chaineye.ArticleCatReq
	(*ArticleCatRep)(nil),    // 6: savourrpc.chaineye.ArticleCatRep
	(*ArticleListReq)(nil),   // 7: savourrpc.chaineye.ArticleListReq
	(*ArticleListRep)(nil),   // 8: savourrpc.chaineye.ArticleListRep
	(*ArticleDetailReq)(nil), // 9: savourrpc.chaineye.ArticleDetailReq
	(*ArticleDetailRep)(nil), // 10: savourrpc.chaineye.ArticleDetailRep
	(*CommentListReq)(nil),   // 11: savourrpc.chaineye.CommentListReq
	(*CommentListRep)(nil),   // 12: savourrpc.chaineye.CommentListRep
	(*AddressReq)(nil),       // 13: savourrpc.chaineye.AddressReq
	(*AddressRep)(nil),       // 14: savourrpc.chaineye.AddressRep
	(*LikeReq)(nil),          // 15: savourrpc.chaineye.LikeReq
	(*LikeRep)(nil),          // 16: savourrpc.chaineye.LikeRep
	(common.ReturnCode)(0),   // 17: savourrpc.ReturnCode
}
var file_savourrpc_chaineye_proto_depIdxs = []int32{
	17, // 0: savourrpc.chaineye.ArticleCatRep.code:type_name -> savourrpc.ReturnCode
	3,  // 1: savourrpc.chaineye.ArticleCatRep.cat_list:type_name -> savourrpc.chaineye.CatList
	17, // 2: savourrpc.chaineye.ArticleListRep.code:type_name -> savourrpc.ReturnCode
	0,  // 3: savourrpc.chaineye.ArticleListRep.articles:type_name -> savourrpc.chaineye.ArticleList
	17, // 4: savourrpc.chaineye.ArticleDetailRep.code:type_name -> savourrpc.ReturnCode
	1,  // 5: savourrpc.chaineye.ArticleDetailRep.comments:type_name -> savourrpc.chaineye.CommentList
	2,  // 6: savourrpc.chaineye.ArticleDetailRep.likes:type_name -> savourrpc.chaineye.LikeList
	17, // 7: savourrpc.chaineye.CommentListRep.code:type_name -> savourrpc.ReturnCode
	1,  // 8: savourrpc.chaineye.CommentListRep.comments:type_name -> savourrpc.chaineye.CommentList
	17, // 9: savourrpc.chaineye.AddressRep.code:type_name -> savourrpc.ReturnCode
	4,  // 10: savourrpc.chaineye.AddressRep.asset_address:type_name -> savourrpc.chaineye.AssetAddress
	17, // 11: savourrpc.chaineye.LikeRep.code:type_name -> savourrpc.ReturnCode
	5,  // 12: savourrpc.chaineye.ChaineyeService.getArticleCat:input_type -> savourrpc.chaineye.ArticleCatReq
	7,  // 13: savourrpc.chaineye.ChaineyeService.getArticleList:input_type -> savourrpc.chaineye.ArticleListReq
	9,  // 14: savourrpc.chaineye.ChaineyeService.getArticleDetail:input_type -> savourrpc.chaineye.ArticleDetailReq
	11, // 15: savourrpc.chaineye.ChaineyeService.getCommentList:input_type -> savourrpc.chaineye.CommentListReq
	13, // 16: savourrpc.chaineye.ChaineyeService.getLikeAddress:input_type -> savourrpc.chaineye.AddressReq
	15, // 17: savourrpc.chaineye.ChaineyeService.likeArticle:input_type -> savourrpc.chaineye.LikeReq
	6,  // 18: savourrpc.chaineye.ChaineyeService.getArticleCat:output_type -> savourrpc.chaineye.ArticleCatRep
	8,  // 19: savourrpc.chaineye.ChaineyeService.getArticleList:output_type -> savourrpc.chaineye.ArticleListRep
	10, // 20: savourrpc.chaineye.ChaineyeService.getArticleDetail:output_type -> savourrpc.chaineye.ArticleDetailRep
	12, // 21: savourrpc.chaineye.ChaineyeService.getCommentList:output_type -> savourrpc.chaineye.CommentListRep
	14, // 22: savourrpc.chaineye.ChaineyeService.getLikeAddress:output_type -> savourrpc.chaineye.AddressRep
	16, // 23: savourrpc.chaineye.ChaineyeService.likeArticle:output_type -> savourrpc.chaineye.LikeRep
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_savourrpc_chaineye_proto_init() }
func file_savourrpc_chaineye_proto_init() {
	if File_savourrpc_chaineye_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_savourrpc_chaineye_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleCatRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleListRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleDetailRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentListRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_savourrpc_chaineye_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_savourrpc_chaineye_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_savourrpc_chaineye_proto_goTypes,
		DependencyIndexes: file_savourrpc_chaineye_proto_depIdxs,
		MessageInfos:      file_savourrpc_chaineye_proto_msgTypes,
	}.Build()
	File_savourrpc_chaineye_proto = out.File
	file_savourrpc_chaineye_proto_rawDesc = nil
	file_savourrpc_chaineye_proto_goTypes = nil
	file_savourrpc_chaineye_proto_depIdxs = nil
}
